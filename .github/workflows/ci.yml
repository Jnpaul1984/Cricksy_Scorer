name: CI

on:
  push:
    branches: [ main, agent/**, feature/** ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  backend-tests:
    name: Backend (fast tests)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run fast unit tests (no DB required)
        working-directory: backend
        env:
          # ensure tests that rely on overrides don't attempt network DB
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5555/none
        run: |
          pytest -q tests/test_health.py tests/test_results_endpoint.py

    backend-integration-tests:
      name: Backend (integration tests)
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.11'
            cache: 'pip'
            cache-dependency-path: backend/requirements.txt

        - name: Install deps
          working-directory: backend
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip install pytest-cov

        - name: Run integration tests
          working-directory: backend
          env:
            CRICKSY_IN_MEMORY_DB: 1
          run: |
            pytest tests/integration/ -v --tb=short --cov=. --cov-report=xml --cov-report=term

        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v4
          with:
            file: ./backend/coverage.xml
            flags: integration
            name: integration-tests
            fail_ci_if_error: false
          
  frontend-build:
    name: Frontend (build + type-check)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install
        working-directory: frontend
        run: npm ci

      - name: Type check
        working-directory: frontend
        run: npm run type-check

      - name: Build (production)
        working-directory: frontend
        env:
          # Safe default; app uses relative paths for most fetches in build
          VITE_API_BASE: http://localhost:8000
        run: npm run build-only

