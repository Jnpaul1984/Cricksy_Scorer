name: CI

on:
  push:
    branches: [ main, agent/**, feature/** ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  pre-commit:
    name: Pre-commit (all files)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files

  lint:
    name: Lint (ruff + black --check + mypy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff==0.6.5 black==24.10.0 mypy==1.11.2

      - name: Ruff
        run: ruff check .

      - name: Black (check)
        run: black --check .

      - name: mypy (strict-ish)
        working-directory: backend
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          # If you have a mypy.ini/pyproject config, mypy will pick it up.
          mypy .

  security:
    name: Security (bandit + pip-audit)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit==2.7.3 bandit[toml]==1.7.9

      - name: pip-audit (backend requirements)
        working-directory: backend
        run: |
          pip-audit -r requirements.txt --progress-spinner off

      - name: Bandit (backend code)
        run: |
          bandit -r backend -x backend/tests -q

  backend-tests:
    name: Backend (fast tests)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run fast unit tests (in-process, no DB)
        working-directory: backend
        env:
          CRICKSY_IN_MEMORY_DB: 1
        run: |
          pytest -q tests/test_health.py tests/test_results_endpoint.py

  backend-integration-tests:
    name: Backend (integration tests)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov

      - name: Run integration tests (in-process app)
        working-directory: backend
        env:
          CRICKSY_IN_MEMORY_DB: 1
        run: |
          pytest tests/integration/ -v --tb=short --cov=. --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage.xml
          flags: integration
          name: integration-tests
          fail_ci_if_error: false

  backend-dls-tests:
    name: Backend (DLS calculation tests)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run DLS calculation tests (in-process app)
        working-directory: backend
        env:
          CRICKSY_IN_MEMORY_DB: 1
        run: |
          pytest tests/test_dls_calculations.py -v --tb=short

  frontend-build:
    name: Frontend (build + type-check)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install
        working-directory: frontend
        run: npm ci

      - name: Type check
        working-directory: frontend
        run: npm run type-check

      - name: Build (production)
        working-directory: frontend
        env:
          VITE_API_BASE: http://localhost:8000
        run: npm run build-only
