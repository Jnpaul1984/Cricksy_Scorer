x-health: &health
  interval: 5s
  timeout: 5s
  retries: 30

services:
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: RubyAnita2018
      POSTGRES_DB: cricksy_scorer
    ports:
      - "5555:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cricksy_scorer"]
      <<: *health

  cache:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      <<: *health

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:RubyAnita2018@db:5432/cricksy_scorer
      REDIS_URL: redis://cache:6379/0
      ENV: ci
      SENTRY_DSN: ${SENTRY_DSN:-}
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      <<: *health
    volumes:
      - ./backend/tests/ci_smoke/fixtures:/app/tests/ci_match/fixtures:ro

  web:
    build:
      context: ./frontend
    environment:
      VITE_API_BASE: "http://api:8000"
      NODE_ENV: production
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "5173:5173"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5173 || exit 1"]
      <<: *health

volumes:
  postgres_data:
